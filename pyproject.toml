[build-system]
requires = ["hatchling", "hatch-regex-commit"]
build-backend = "hatchling.build"

[project]
name = "dnadiffusion"
authors = [
  { name = "dnadiffusion", email = "dnadiffusion@pinellolab.org" }
]
description = "Library for probabilistic analysis of protein-protein interaction sequencing data."
readme = "README.md"
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
]
requires-python = ">=3.10"
dependencies = [
  "accelerate==0.24.0",
  "click==8.1.7",
  "einops==0.7.0",
  "genomepy==0.16.1",
  "gimmemotifs==0.18.0",
  "gtfparse==1.3.0",
  "jupyterlab==4.0.7",
  "matplotlib==3.8.0",
  "memory-efficient-attention-pytorch==0.1.6",
  "pandas==2.1.1",
  "pybedtools==0.9.1",
  "seaborn==0.13.0",
  "sourmash==4.8.4",
  "torch==2.1.0",
  "torchvision==0.16.0",
  "wandb==0.15.12",
]

[project.scripts]
dnadiffusion = "dnadiffusion.cli:main"

[project.urls]
Documentation = "https://pinellolab.github.io/DNA-Diffusion"
Source = "https://github.com/pinellolab/DNA-Diffusion"

[tool.ruff]
target-version = "py310"
line-length = 120
select = [
  "A",
  # "ARG",
  # "B",
  "C",
  "DTZ",
  # "E",
  "EM",
  # "F",
  # "FBT",
  "I",
  "ICN",
  "ISC",
  # "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  # "S",
  # "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]
exclude = [
    "src/refactor",
]

[tool.ruff.isort]
known-first-party = ["dnadiffusion"]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.pytest.ini_options]
addopts = "--cov=src/dnadiffusion/ --cov-report=term-missing --ignore=src/refactor"
asyncio_mode = "strict"

[tool.coverage.run]
source_pkgs = ["dnadiffusion", "tests"]
branch = true
parallel = true
omit = [
  "src/dnadiffusion/__about__.py",
  "src/dnadiffusion/__main__.py",
  "tests/conftest.py",
]

[tool.coverage.paths]
dnadiffusion = ["src/dnadiffusion", "*/dnadiffusion/src/dnadiffusion"]
tests = ["tests", "*/dnadiffusion/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.10"

[[tool.mypy.overrides]]
module = [
    "accelerate",
    "Bio",
    "hydra_zen",
    "memory_efficient_attention_pytorch",
    "matplotlib",
    "matplotlib.pyplot",
    "pandas",
    "torchvision",
    "torchvision.transforms",
    "seaborn",
    "scipy.special",
    "sourmash",
]
ignore_missing_imports = true

[tool.hatch]

[tool.hatch.build.targets.wheel]
packages = ['src/dnadiffusion']

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "src/dnadiffusion/__about__.py"

[tool.hatch.envs.default]
python = "3.10"
dependencies = [
    "mkdocs-material==9.4.7",
    "mkdocstrings==0.23.0",
    "mkdocstrings[python]",
    "mypy==1.6.1",
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "ruff==0.1.3",
    "types-tqdm==4.66.0.2",
    "xdoctest==1.1.1",
]

[tool.hatch.envs.default.scripts]
test = "pytest -rA"
test-cov-xml = "pytest -rA --cov-report=xml"
lint = [
  "ruff format .",
  "ruff --fix .",
  # "mypy src/dnadiffusion/",
]
lint-check = [
  "ruff format --check .",
  "ruff .",
  # "mypy src/dnadiffusion/",
]
docs-serve = "mkdocs serve"
docs-build = "mkdocs build"
